##### ANSIBLE generated config
## {{ ansible_managed }} ##
server {
        listen {{ nginx_bind_addr }}:{{ item.http_port | default ("80")}};
        server_name {{ item.servername }};

        return 301 https://$host$request_uri;
}

server {
        listen  {{ nginx_bind_addr }}:{{ item.https_ports | default ("443") }} ssl;
        server_name {{ item.servername }};

# log project use  include
{% if nginx_logs_stdout is not defined %}
        access_log  {{ nginx_log_path }}/{{ item.servername.split(' ')[0] }}-access.log  {{ nginx_log_format | default ("extend_json") }};
        error_log   {{ nginx_log_path }}/{{ item.servername.split(' ')[0] }}-error.log;
{% endif %}
{% if nginx_logs_stdout is defined %}
        access_log  /dev/stdout  {{nginx_log_format |default ("extend_json")}};
        error_log   /dev/stdout;
{% endif %}


## include ssl certificate
{% if nginx.vhosts %}
    ssl_certificate     {{ nginx_ssl_path }}/{% if item.domain is defined %}{{ item.domain }}{% else %}{{ nginx_default_domain }}{% endif %}/{{ item.certname | default ("fullchain.pem") }};
    ssl_certificate_key {{ nginx_ssl_path }}/{% if item.domain is defined %}{{ item.domain }}{% else %}{{ nginx_default_domain }}{% endif %}/{{ item.privkey | default ("privkey.pem") }};
{% endif %}

# Ansible management
{% for included in  nginx.include %}
    include  {{ included }};
{% endfor %}
### end ansible management

{% if nginx.size_upload_files  is defined %}
{% for included in  nginx.size_upload_files %}
# Ansible management max upload size
    client_max_body_size  {{ included.client_max_body_size }};
{% endfor %}
{% endif %}
### end ansible management

### location /metrics is enabled on this host ###
    location   ~   ^/metrics {
{% if item.metrics_allow is defined %}
{% for c in item.metrics_allow %}
        allow   {{ c }};
{% endfor %}
{% else %}
        allow   10.0.0.0/8;
{% endif %}
        deny    all;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite /metrics(/.*)$ $1 break;
        proxy_pass  {% if item.metrics_protocol is defined %}{{ item.metrics_protocol }}{% else %}{{ item.upstream_protocol | default('https') }}{% endif %}://{% if item.upstream_metrics is defined %}{{ item.upstream_metrics }}{% else %}{{ item.upstream_name }}{% endif %};
   }

### location /hc is enabled on this host ###
    location    ~   ^/hc {
{% if item.hc_allow is defined %}
{% for c in item.hc_allow %}
        allow   {{ c }};
{% endfor %}
{% else %}
        allow   10.0.0.0/8;
{% endif %}
        deny    all;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass  {% if item.hc_protocol is defined %}{{ item.hc_protocol }}{% else %}{{ item.upstream_protocol | default('https') }}{% endif %}://{% if item.upstream_hc is defined %}{{ item.upstream_hc }}{% else %}{{ item.upstream_name }}{% endif %};
    }

    location / {
      proxy_pass {{ item.upstream_protocol | default('https') }}://{{ item.upstream_name }};
    }

    location ~ /(.*)/ws {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_http_version 1.1;
      proxy_pass {{ item.upstream_protocol | default('https') }}://{{ item.upstream_name }}/$1/ws;
      proxy_buffering on;
      proxy_buffer_size 4k;
      proxy_buffers 32 132k;
      proxy_max_temp_file_size 0;
    }
}

### end generate config
