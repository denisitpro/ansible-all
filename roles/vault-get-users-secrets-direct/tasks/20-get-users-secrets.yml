---
- name: "Get vault data {{ vault_url_direct }}"
  ansible.builtin.uri:
    url: "{{ vault_url_direct }}/v1/{{ item.kv }}/data/{{ item.path }}/{{ item.key_name }}"
    body_format: json
    validate_certs: "{{validate_certs_check | default(true) }} "
    headers:
      Accept: 'application/json'
      X-Vault-Token: "{{ vault_normalized_access_token }}"
    method: GET
  register: key_value
  with_items: "{{ vault.secret }}"

#- name: debug path
#  debug:
#    msg: "{{ vault_url_direct }}/v1/{{ item.kv }}/data/{{ item.path }}/{{ item.key_name }}"
#  with_items: "{{ vault.secret }}"

#- name: PRINT ALL  value
#  debug:
#    msg: "{{key_value}}"

- name: Set list users secrets  - no_log enable
  ansible.builtin.set_fact:
    vault_list_users_secret: '{{ vault_list_users_secret|default([]) + [ { "key_name": item.item.key_name, "value": item.json.data.data.value } ] }}'
  with_items: "{{ key_value.results }}"
  no_log: true

- name: Set list users secrets  - no_log enable
  ansible.builtin.set_fact:
    vault_list_users_secret: '{{ vault_list_users_secret|default([]) + [ { "key_name": item.item.kv + "/" + item.item.path + "/" + item.item.key_name , "value": item.json.data.data.value } ] }}'
  with_items: "{{ key_value.results }}"
  no_log: true

- name: Check value is not null
  ansible.builtin.fail: msg="secret {{ item.key_name }} null, check our permission and secret"
  when: item.value|length == 0
  with_items: "{{ vault_list_users_secret }}"
  no_log: true

#- name: PRINT list user secret
#  ansible.builtin.debug:
#    msg: "{{ vault_list_users_secret }}"

- name: Set dict users secrets
  ansible.builtin.set_fact:
    vault_dict_users_secret: "{{ vault_list_users_secret | items2dict(key_name='key_name', value_name='value') }}"


