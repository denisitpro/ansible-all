services:
  grafana:
    image: {{ grafana_image }}:{{ grafana_version }}
    container_name: {{ grafana_docker_container_name | default('grafana') }}
{% if  grafana_force_port443 is not defined %}
    network_mode: host
{% else %}
    ports:
      - "443:443"
    cap_add:
      - NET_BIND_SERVICE
{% endif %}
    mem_limit: {{ grafana_mem_limit | default('512M') }}
    volumes:
      - "{{ grafana_data_path }}/etc:/etc/grafana"
      - "{{ grafana_data_path }}/data:/var/lib/grafana"
      - "{{ grafana_ssl_path }}:{{ grafana_ssl_path }}"
      - "{{ grafana_data_path }}/etc/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
      - "{{ grafana_data_path }}/etc/provisioning/datasources:/etc/grafana/provisioning/datasources"
      - "{{ grafana_data_path }}/etc/provisioning/plugins:/etc/grafana/provisioning/plugins"
      - "{{ grafana_data_path }}/etc/provisioning/notifiers:/etc/grafana/provisioning/notifiers"

    restart: {{ grafana_restart | default('always') }}
{% if grafana_plugins is defined %}
    environment:
      GF_INSTALL_PLUGINS: '{{ grafana_plugins }}'
{% endif %}
{% if vector is defined %}
    logging:
      driver: fluentd
      options:
        fluentd-address: {{ vector_server_fluent_address }}:{{ vector_server_fluent_port | default('24224') }}
        tag: {{ grafana_docker_container_name | default('grafana') }}
        fluentd-async: "{{ fluent_async | default('true') }}"
        fluentd-buffer-limit: "{{ fluentd_buffer_limit | default('200000') }}"
{% else %}
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '2'
{% endif %}