---
- name: Check for existing binary
  stat:
    path: "{{ nomad_binary_dir }}/{{nomad_binary_name}}"
  register: binary_stat_result

- debug:
    msg: binary_stat_result -  {{ binary_stat_result }}

- name: Download
  get_url:
    url: "{{ nomad_download_url }}"
    dest: "{{ nomad_download_dir }}"
    mode: 0644
  when: nomad_always_update_binary or not binary_stat_result.stat.exists

- name: Unarchive nomad a file that is already on the remote machine
  unarchive:
    src: "{{ nomad_download_dir }}/nomad_{{nomad_version}}_linux_amd64.zip"
    dest: "/tmp/"
    owner: root
    group: root
    remote_src: yes

- name: Install  binary
  copy:
    src: "{{ nomad_download_dir }}/{{nomad_binary_name}}"
    dest: "{{ nomad_binary_dir }}/{{nomad_binary_name}}-{{nomad_version}}"
    owner: root
    group: root
    mode: 0755
    remote_src: true
    force: "{{ nomad_always_update_binary }}"
  when: nomad_always_update_binary or not binary_stat_result.stat.exists
  notify: restart nomad

- name: Create a symbolic nomad
  file:
    src: "{{ nomad_binary_dir }}/{{nomad_binary_name}}-{{nomad_version}}"
    dest: "{{ nomad_binary_dir }}/{{nomad_binary_name}}"
    owner: root
    group: root
    state: link

- name: remove download files
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - "{{ nomad_download_dir }}/nomad_{{nomad_version}}_linux_amd64.zip"
    - "{{ nomad_download_dir }}/nomad"
  tags: [clean]
  
- name: create path
  file:
    path: "{{item}}"
    state: directory
    mode: 0700
  with_items:
    - "{{ nomad_data_dir }}"
    - "{{ nomad_config_dir }}"
  tags: [path]  