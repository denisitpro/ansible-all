---
- name: Set daemon name based on Ubuntu version
  ansible.builtin.set_fact:
    ssh_daemon: "{{ 'sshd' if ansible_distribution_version == '22.04' else 'ssh' }}"
  when: ansible_distribution == 'Ubuntu'

- name: copy login.defs
  ansible.builtin.template:
    src: login.defs.j2
    dest: /etc/login.defs
    mode: "0644"
    owner: root
    group: root
    backup: true

- name: copy pwquality.conf
  ansible.builtin.copy:
    src: pwquality.conf
    dest: /etc/security/pwquality.conf
    mode: "0644"
    owner: root
    group: root
    backup: true

- ansible.builtin.debug:
    msg: "Ubuntu version {{  ansible_distribution_major_version }}"
  tags: [debug]

- name: Ensure /run/sshd directory exists
  ansible.builtin.file:
    path: /run/sshd
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: create path
  ansible.builtin.file:
    path: "/etc/ssh/sshd_config.d/"
    owner: root
    group: root
    state: directory
    mode: "0644"
  tags: [sshd]
  when: ansible_distribution == 'Ubuntu'

- name: copy general sshd config - /etc/ssh/sshd_config.d/sshd_general.conf
  ansible.builtin.template:
    src: sshd_general.conf.j2
    dest: /etc/ssh/sshd_config.d/sshd_general.conf
    mode: "0644"
    owner: root
    group: root
    validate: "/usr/sbin/sshd -T -f %s"
    backup: true
  notify: "restart {{ ssh_daemon }}"
  tags: [sshd]
  when: "(ansible_distribution == 'Ubuntu')"

- name: copy sshd config ubuntu - /etc/ssh/sshd_config
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    mode: "0644"
    owner: root
    group: root
    validate: "/usr/sbin/sshd -T -f %s"
    backup: true
  tags: [sshd]
  notify: "restart {{ ssh_daemon }}"
  when: "(ansible_distribution == 'Ubuntu')"

- name: Disable SSH password auth only if the directive exists
  when:
    - ansible_distribution == 'Ubuntu'
    - ssh_password_authentication is not defined or ssh_password_authentication in ['no', 'false', False]
  block:
    - name: Candidate files (explicit)
      ansible.builtin.stat:
        path: "{{ item }}"
      loop:
        - /etc/ssh/sshd_config
        - /etc/ssh/sshd_config.d/*.conf
      register: sshd_candidates

    - name: Find any *.conf in /etc/ssh/sshd_config.d
      ansible.builtin.find:
        paths: /etc/ssh/sshd_config.d
        patterns: "*.conf"
        file_type: file
      register: sshd_d_confs
      failed_when: false

    - name: Build final list of files that exist
      ansible.builtin.set_fact:
        sshd_cfgs: >-
          {{
            (sshd_candidates.results | selectattr('stat.exists') | map(attribute='stat.path') | list)
            | union(sshd_d_confs.files | default([]) | map(attribute='path') | list)
            | unique
          }}

    - name: Replace existing PasswordAuthentication directives with "no" (do not add)
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: '^[ \t#]*PasswordAuthentication[ \t]+\S+'
        replace: 'PasswordAuthentication no'
        backup: true
      loop: "{{ sshd_cfgs }}"
      notify: "restart {{ ssh_daemon }}"
  tags: [sshd]
