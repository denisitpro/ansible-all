apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v{{k8s_cls_version}}
{% if k8s_cls_name is defined %}
controlPlaneEndpoint: "{{ k8s_cls_name |default('k8s.example.com') }}:{{ k8s_cls_port |default('6443') }}"
{% endif %}
networking:
  podSubnet: "10.48.0.0/21{% if k8s_ipv6 is defined %},fd00:10:48::/48{% endif %}"  # order ip4 first second ipv6 important
  serviceSubnet: "10.96.0.0/12{% if k8s_ipv6 is defined %},fd00:10:96::/108{% endif %}"  #order ip4 first second ipv6 important
apiServer:
  certSANs:
    - "{{ k8s_cls_name | default('k8s.example.com') }}"
    - "10.15.1.1"
    - "10.15.1.2"
    - "10.15.1.3"
    - "10.15.2.100"
  extraArgs:
    advertise-address: "{{ master_ip }}"
    bind-address: "{{ master_ip }}"
controllerManager:
  extraArgs:
    bind-address: "{{ master_ip }}"
scheduler:
  extraArgs:
    bind-address: "{{ master_ip }}"
etcd:
  local:
    extraArgs:
      listen-client-urls: "https://{{ master_ip }}:2379"
      advertise-client-urls: "https://{{ master_ip }}:2379"
      listen-peer-urls: "https://{{ master_ip }}:2380"
{% if k8s_ipv6 is defined %}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "ipvs"
ipvs:
  strictARP: true
{% endif %}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ master_ip }}"
  bindPort: 6443
nodeRegistration:
  kubeletExtraArgs:
    address: "{{ master_ip }}"