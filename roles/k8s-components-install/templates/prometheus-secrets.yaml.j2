# Debug information - remove after fixing
# vault_dict_users_secret_g2 keys: {{ vault_dict_users_secret_g2.keys() | list if vault_dict_users_secret_g2 is defined else 'NOT_DEFINED' }}
# prom_stack_mtls exists: {{ 'prom_stack_mtls' in vault_dict_users_secret_g2 if vault_dict_users_secret_g2 is defined else 'NO_VAULT_DICT' }}
# prom_stack_mtls_root_ca exists: {{ 'prom_stack_mtls_root_ca' in vault_dict_users_secret_g2 if vault_dict_users_secret_g2 is defined else 'NO_VAULT_DICT' }}

{% for item in k8s_prom_remote_write %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ item.remote_write.secret_name }}
  namespace: monitoring
type: Opaque
data:
{% if item.remote_write.secret_type == 'mtls' %}
  client.crt: {{ (item.remote_write.tls_config.cert_file | default('')) | b64encode }}
  client.key: {{ (item.remote_write.tls_config.key_file | default('')) | b64encode }}
  cacert: {{ (item.remote_write.tls_config.ca_file | default('')) | b64encode }}
{% elif item.remote_write.secret_type == 'http-basic' %}
  username: {{ (item.remote_write.basic_auth.username | default('')) | b64encode }}
  password: {{ (item.remote_write.basic_auth.password | default('')) | b64encode }}
{% else %}
  # Default fallback for unknown secret types
  client.crt: {{ (item.remote_write.tls_config.cert_file | default('')) | b64encode }}
  client.key: {{ (item.remote_write.tls_config.key_file | default('')) | b64encode }}
  cacert: {{ (item.remote_write.tls_config.ca_file | default('')) | b64encode }}
{% endif %}
{% endfor %}