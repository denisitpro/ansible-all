# https://grafana.com/docs/loki/latest/setup/install/helm/install-microservices/
loki:
  auth_enabled: false
  schemaConfig:
     configs:
       - from: "2024-04-01"
         store: tsdb
         object_store: s3
         schema: v13
         index:
           prefix: loki_index_
           period: 24h
  ingester:
     chunk_encoding: snappy
  querier:
     # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
     max_concurrent: 4
  pattern_ingester:
     enabled: true
  limits_config:
     allow_structured_metadata: true
     volume_enabled: true


deploymentMode: Distributed

ingester:
  replicas: 3 # To ensure data durability with replication
  zoneAwareReplication:
     enabled: false
  persistence:
    enabled: true
    size: {{ k8s_loki_ingester_pvc_size | default('10Gi') }}
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}

querier:
  replicas: 3 # Improve query performance via parallelism
  maxUnavailable: 2
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}
queryFrontend:
  replicas: 2
  maxUnavailable: 1
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}
queryScheduler:
  replicas: 2
distributor:
  replicas: 3 
  maxUnavailable: 2
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}
compactor:
  replicas: 1
  persistence:
    enabled: true
    size: {{ k8s_loki_compactor_pvc_size | default('2Gi') }}
  # Retention settings belong to the component that does the work.
  retention_enabled: true
  retention_period: 24h
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}

indexGateway:
  replicas: 2
  maxUnavailable: 1
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}

bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0

backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

chunksCache:
  enabled: true
  allocatedMemory: 1024

singleBinary:
  replicas: 0

# This exposes the Loki gateway so it can be written to and queried externaly
gateway:
  enabled: true
  service:
    type: ClusterIP
{% if k8s_loki_monitoring_enabled is defined and k8s_loki_monitoring_enabled %}
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
    interval: 30s
    scrapeTimeout: 10s
{% endif %}


# Enable minio for storage
minio:
  enabled: true
  persistence:
    size: {{ k8s_loki_minio_pvc_size | default('20Gi') }} 
