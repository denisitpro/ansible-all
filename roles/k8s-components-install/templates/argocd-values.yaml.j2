global:
  domain: {{ argocd_domain | default('argocd.example.com') }}
  ha:
    enabled: false

{% if argocd_ingress_support is defined or argocd_teleport is defined%}
configs:
  params:
    server.insecure: true
{% endif %}
redis-ha:
  enabled: false

controller:
  replicas: 2

repoServer:
  replicas: 2
  extraEnv:
    - name: ARGOCD_GIT_VALUE_FILES
      value: "true"

server:
  replicas: 2
{% if argocd_ingress_support is defined %}
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
{% if argocd_ingress_support is defined and argocd_ingress_whitelist is defined %}
      nginx.ingress.kubernetes.io/whitelist-source-range: "{{ argocd_ingress_whitelist | join(', ') }}"
{% endif %}
{% if argocd_acme %}
      cert-manager.io/cluster-issuer: cloudflare-issuer-dns-challenge
{% endif %}
    extraTls:
      - hosts:
        - {{ argocd_domain | default('argocd.example.com') }}
        secretName: {{ (argocd_domain | default('argocd.example.com') | replace('.', '-') ~ '-tls') if argocd_acme else 'fake-tls' }}
{% endif %}