---
apiVersion: v1
kind: Service
metadata:
  name: argocd-teleport
  annotations:
    appProtocol: http
    teleport.dev/protocol: http
    teleport.dev/insecure-skip-verify: "true"
    teleport.dev/name: "{{ argocd_teleport_name | default('argocd') }}"
  labels:
    teleport: "{{ teleport_k8s_addr | default('tp.example.com') }}"
{% if teleport_app_acl_access_level is defined and teleport_app_acl_access_level | length > 0 %}
{% for app in teleport_app_acl_access_level %}
{% if app.name == 'argocd' and app.app_acl_level is defined and app.app_acl_level | length > 0 %}
{% for level in app.app_acl_level %}
    app_acl_level{{ level }}: "{{ level }}"
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: https-teleport
    port: 28080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-server
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dex-teleport
#   annotations:
#     appProtocol: http
#     teleport.dev/protocol: http
#     teleport.dev/insecure-skip-verify: "true"
#     teleport.dev/name: "{{ dex_teleport_name | default('argocd.tp.example.com') }}"
#   labels:
#     teleport: "{{ teleport_k8s_addr | default('tp.example.com') }}"
# {% if teleport_app_acl_access_level is defined and teleport_app_acl_access_level | length > 0 %}
# {% for app in teleport_app_acl_access_level %}
# {% if app.name == 'argocd' and app.app_acl_level is defined and app.app_acl_level | length > 0 %}
# {% for level in app.app_acl_level %}
#     app_acl_level{{ level }}: "{{ level }}"
# {% endfor %}
# {% endif %}
# {% endfor %}
# {% endif %}
# spec:
#   internalTrafficPolicy: Cluster
#   ports:
#   - name: https-dex
#     port: 28081
#     protocol: TCP
#     targetPort: 5556
#   selector:
#     app.kubernetes.io/instance: argocd
#     app.kubernetes.io/name: argocd-dex-server
#   sessionAffinity: None
#   type: ClusterIP
# status:
#   loadBalancer: {}  