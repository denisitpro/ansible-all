---
helm_componets_list:
  - longhorn
  - ingress-nginx
  - prometheus
  - teleport-agent
  - vso
  - vai
  - cert-manager
  - hubble-ui
  - metrics-server
  - loki
  # - vector
  # - kong

argocd_github_client_id: "{{ vault_dict_users_secret_g2.argocd_sso_github.client_id | default('set_me') }}"
argocd_github_secret_id: "{{ vault_dict_users_secret_g2.argocd_sso_github.client_secrets | default('set_me') }}"
teleport_k8s_agent_token: "{{ vault_dict_users_secret_g2.teleport_k8s_agent_token.value | default('set_me') }}"


k8s_cert_manager_cloudflare_token: "{{ vault_dict_users_secret_g2.k8s_cert_manager_cloudflare_token.value | default('set_me') }}"

k8s_teleport_agent_kub_cluster_base_labels:
  region: "unknown"
  platform: "amd64"
  stand: "example"

teleport_app_acl_access_level:
  - name: "argocd-example"
    app_acl_level: [900]

k8s_teleport_agent_kubernetes_discovery:
  - types: ["app"]
    namespaces: ["example-app"]
    labels:
      app_acl_level900: "900"

# Discovery group for unique identification of teleport agents
k8s_teleport_agent_discovery_group: "{{ k8s_cls_name | default('k8s-example.example.com') }}"


# argocd_policy_csv_admins:
#   - org:team

# cloudflare ip rane  https://www.cloudflare.com/ips/
# nginx_ingress_real_ip:
#   ipv4:
#     - 173.245.48.0/20
#     - 103.21.244.0/22
#     - 103.22.200.0/22
#     - 103.31.4.0/22
#     - 141.101.64.0/18
#     - 108.162.192.0/18
#     - 190.93.240.0/20
#     - 188.114.96.0/20
#     - 197.234.240.0/22
#     - 198.41.128.0/17
#     - 162.158.0.0/15
#     - 104.16.0.0/13
#     - 104.24.0.0/14
#     - 172.64.0.0/13
#     - 131.0.72.0/22
#   ipv6:
#     - 2400:cb00::/32
#     - 2606:4700::/32
#     - 2803:f800::/32
#     - 2405:b500::/32
#     - 2405:8100::/32
#     - 2a06:98c0::/29
#     - 2c0f:f248::/32

# Pod monitoring configuration - Prometheus will monitor pods with specific selectors
k8s_pod_monitoring_enabled: "true"

# Loki monitoring configuration - Enable ServiceMonitor for prometheus-operator
k8s_loki_monitoring_enabled: "true"

# Pod monitoring configuration
k8s_pod_monitoring_config:
  # Which pods to monitor (by labels/annotations)
  selector:
    matchLabels:
      prometheus.io/scrape: "true"

  # Monitor pods in ALL namespaces (dynamic discovery)
  namespaceSelector: {}
