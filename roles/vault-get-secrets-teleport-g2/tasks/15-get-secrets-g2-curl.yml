---
# - name: Debug Vault API paths to be read
#   ansible.builtin.debug:
#     msg: "Would read from: {{ vault_url_teleport }}/v1/{{ item.backend }}/data/{{ item.kv_path }}"
#   with_items: "{{ vault_sum_g2 }}"


- name: Set vault configuration to use
  ansible.builtin.set_fact:
    vault_sum_g2: "{{ (vault_global_g2 | default([])) + (vault_extend_g2 | default([])) + (vault_g2_role_override | default([])) }}"


- name: Get vault data from vault kvv2 (vault g2)
  ansible.builtin.shell: |
    curl --silent --show-error --cert "{{ teleport_cert_path }}" --key "{{ teleport_key_path }}" \
    --header "Accept: application/json" \
    --header "X-Vault-Token: {{ vault_normalized_access_token }}" \
    --request GET \
    "{{ vault_url_teleport }}/v1/{{ item.backend }}/data/{{ item.kv_path }}"
  register: g2_key_values
  with_items: "{{ vault_sum_g2 }}"


- name: Set list users secrets - no_log enable
  ansible.builtin.set_fact:
    vault_list_users_secret_g2: >-
      {{
        vault_list_users_secret_g2 | default([]) + [
          {
            'key_name': item.item.name,
            'value': dict(
              item.item['keys'] | zip(
                item.stdout | from_json | json_query('data.data') | dict2items | selectattr('key', 'in', item.item['keys']) | map(attribute='value')
              )
            )
          }
        ]
      }}
  with_items: "{{ g2_key_values.results }}"
  no_log: true

- name: Check all secret keys are present and non-empty
  ansible.builtin.assert:
    that:
      - item.value is mapping
      - item.value | length == expected_key_count[item.key_name]
      - item.value | dict2items | map(attribute='value') | select('match', '^(null\\s*)?$') | list | length == 0
    fail_msg: "Secret {{ item.key_name }} has missing or empty keys"
    success_msg: "Secret {{ item.key_name }} is complete"
  vars:
    expected_key_count: >-
      {{
        dict(vault_sum_g2 | map(attribute='name') | zip(vault_sum_g2 | map(attribute='keys') | map('length')))
      }}
  loop: "{{ vault_list_users_secret_g2 }}"
  loop_control:
    label: "{{ item.key_name }}"
  no_log: true

- name: Set dict users secrets
  ansible.builtin.set_fact:
    vault_dict_users_secret_g2: "{{ vault_list_users_secret_g2 | items2dict(key_name='key_name', value_name='value') }}"

# - name: Print collected user secrets (for debug)
#   ansible.builtin.debug:
#     var: vault_dict_users_secret_g2
