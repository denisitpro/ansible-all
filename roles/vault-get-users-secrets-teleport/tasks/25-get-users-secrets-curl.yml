---
- name: Get vault data from vault
  ansible.builtin.shell: |
    curl --silent --show-error --cert "{{ teleport_cert_path }}" --key "{{ teleport_key_path }}" \
    --header "Accept: application/json" \
    --header "X-Vault-Token: {{ vault_normalized_access_token }}" \
    --request GET \
    "{{ vault_url_teleport }}/v1/{{ item.kv }}/data/{{ item.path }}/{{ item.key_name }}"
  register: key_value
  with_items: "{{ vault.secret }}"

# - name: PRINT ALL  value
#   ansible.builtin.debug:
#     msg: "{{ key_value }}"

# - name: Print key_value stdout
#   ansible.builtin.debug:
#     var: key_value
#   with_items: "{{ key_value.results }}"


- name: Set list users secrets - no_log enable
  ansible.builtin.set_fact:
    vault_list_users_secret: '{{ vault_list_users_secret | default([]) + [{"key_name": item.item.key_name, "value": (item.stdout | from_json).data.data.value}] }}'
  with_items: "{{ key_value.results }}"
  no_log: true

- name: Check value is not null
  ansible.builtin.fail:
    msg: "secret {{ item.key_name }} null, check our permission and secret"
  when: item.value|length == 0
  with_items: "{{ vault_list_users_secret }}"
  no_log: true

# - name: PRINT list user secret
#  ansible.builtin.debug:
#    msg: "{{ vault_list_users_secret }}"

- name: Set dict users secrets
  ansible.builtin.set_fact:
    vault_dict_users_secret: "{{ vault_list_users_secret | items2dict(key_name='key_name', value_name='value') }}"
