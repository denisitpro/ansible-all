## {{ ansible_managed }} ##

services:
  kafka:
    image: bitnami/kafka:{{ kafka_image_version }}
    container_name: kafka
    hostname: {{ ansible_hostname }}
    network_mode: host
    volumes:
      - {{ kafka_base_path }}:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID={{ kafka_broker_id | default('0') }}
{% if kafka_auth_enable is defined %}
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=SASL_PLAINTEXT
      - KAFKA_CFG_LISTENERS=SASL_PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=SASL_PLAINTEXT://{{ kafka_cfg_advertised_listeners }}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_INTER_BROKER_USER=interbroker
      - KAFKA_INTER_BROKER_PASSWORD={{ kafka_interbroker_pass }}
      - KAFKA_CLIENT_USERS={% for user in kafka_auth_users %}{{ user.username }}{% if not loop.last %},{% endif %}{% endfor %}

      - KAFKA_CLIENT_PASSWORDS={% for user in kafka_auth_users %}{{ user.pass }}{% if not loop.last %},{% endif %}{% endfor %}

{% else %}
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://{{ ansible_fqdn }}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
{% endif %}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID={{ kafka_kraft_cluster_id  | default('local-set-me')}}
      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      - KAFKA_CFG_OFFSETS_RETENTION_MUNITES=10080
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=60000
      - KAFKA_CFG_COMPRESSION_TYPE=gzip
{% if kafka_cluster_servers is defined and kafka_cluster_servers | length > 0 %}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS={% for server in kafka_cluster_servers %}{{ server.id }}@{{ server.hostname }}:{{ server.port | default(9093) }}{% if not loop.last %},{% endif %}
{% endfor %}
{% elif kafka_broker_id_group_calculate is defined and kafka_broker_id_group_calculate in groups %}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS={% for host in groups[kafka_broker_id_group_calculate] %}{{ hostvars[host]['kafka_broker_id'] }}@{{ host }}:9093{% if not loop.last %},{% endif %}{% endfor %}

      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR={{kafka_default_replication_factor | default('2')}}
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR={{kafka_offsets_topic_replication_factor | default('2')}}
{% else %}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9093
{% endif %}
      - KAFKA_CFG_UNCLEAN_LEADER_ELECTION_ENABLE=true # inportant
      - KAFKA_CFG_MIN_INSYNC_REPLICAS=2
    restart: {{ kafka_restart | default('always') }}
    logging:
      driver: json-file
      options:
        max-size: 100m
        max-file: '2'