---
stand_type: "stg"

redis_user: redis
redis_bind_localhost: true
redis_port: 6379
redis_conf_tmpl: "redis-master.conf.j2"

postgresql_user: postgres
pg_version: 11


### ubuntu path
pg_path: "/var/lib/postgresql"
pg_data: "{{pg_path}}/{{pg_version}}/main"

## centos path - example; rewrite to level inventory
#pg_data: "/var/lib/pgsql/{{pg_version}}/data"

pg_login_host: 127.0.0.1
pg_admin_user: postgres
pg_backup_path: /mnt/pgbackup

postgres:
  listen_addresses: '127.0.0.1, {{ ansible_default_ipv4.address }}'
  listen_port: 5432
  hba_entries:
    - { type: local, database: all, user: postgres, address: "", auth_method: md5 }
    - { type: host, database: all, user: postgres, address: '127.0.0.1/32', auth_method: md5 }
    - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
    - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
  databases:
    - { name: "db_sentry_sandbox", owner: "sentry", backup: True}
  users:
    - { name: "sentry"}

sentry_user: sentry
sentry_group: sentry
sentry_path: /opt/sentry
sentry_conf: /etc/sentry

vault:
  secret:
    - {kv: "{{stand_type}}", appname: postgres, server: "entry-01", key_name: "pg_postgres_pass" }
    - {kv: "{{stand_type}}", appname: postgres, server: "sentry-01", key_name: "sentry"}

nginx_default_domain: "{{internal_domain}}"

nginx:
  upstreams:
    - { name: "sentry-01", server: sentry-01, domain: "{{internal_domain}}", port: 9000, fail_timeout: 0, conf: "nginx-default-upstream.conf.j2"}

  vhosts:
    - { servername: "sentry-01.{{nginx_default_domain}}", domain: "{{nginx_default_domain}}",
        http_port: 80, https_ports: 443, config_file: "vhost-general.conf.j2",
        certname: "{{nginx_cert_name}}",privkey: "{{nginx_privkey_name}}",
        upstream_protocol: http, upstream_name: sentry-01, ssl_rewrite: "yes" , cert_type: "personal"}
  include:
    - "/etc/nginx/include/pci-dss_2018.conf"

zabbix:
  apply_tag:
    - linux
    - sentry

iptables:
  rules:
    - { name: "nginx", protocol: tcp, port: "80" }
    - { name: "nginx", protocol: tcp, port: "443" }
    - { name: "node_exporter", protocol: "tcp", port: "9100", source: "{{prometheus_ip}}"}
